@page
@model RPDemo.Pages.Orders.CreateModel
@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<form method="post">
    <!--validation for entire model-->
    <div asp-validation-summary="ModelOnly" class="text-danger"></div> <!--bootstrap - minified version built into asp.net core - only css for styling - no js bootstrap -->

    <div class="form-group">
        <!--three lines one field for the dropdown - with a label dropdown control and validation-->
        <label asp-for="Order.FoodId" class="control-label"></label> <!--'asp-for' tag helper - works out what the text to show is each time and also links this UI element to the field in the model-->
        <select asp-for="Order.FoodId" asp-items="Model.FoodItems" class="form-control"></select><!--select cannot be a self closing tag like input-->
        <span asp-validation-for="Order.FoodId" class="text-danger"></span> <!--validation for foodId individually-->
    </div>

    <div class="form-group">
        <!--three lines one field-->
        <label asp-for="Order.Quantity" class="control-label"></label>
        <input asp-for="Order.Quantity" class="form-control" /> <!-- 'asp-for' also knows what type to expect in the UI element and which to validate for by which type the field is e.g. text or numeric - this is numeric-->
        <span asp-validation-for="Order.Quantity" class="text-danger"></span>
    </div>

    <div class="form-group">
        <!--one field - user given order name-->
        <label asp-for="Order.OrderName" class="control-label"></label>
        <input asp-for="Order.OrderName" class="form-control" /> <!--text-->
        <span asp-validation-for="Order.OrderName" class="text-danger"></span>
    </div>

    <div class="form-group">
        <!--form submit button-->
        <input type="submit" value="Order Food" class="btn btn-primary" />
    </div>
</form>